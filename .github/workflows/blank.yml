name: Build Android Kernels - Snapdragon 8 Series

on:
  workflow_dispatch:
    inputs:
      device:
        description: '目标设备'
        required: true
        type: choice
        options:
        - mondrian  # 红米 K60
        - vermeer   # 红米 K70
        - sheng     # 小米 Pad 6S Pro
      toolchain:
        description: '工具链选择'
        required: false
        default: 'clang'
        type: choice
        options:
        - clang
        - gcc
      clean_build:
        description: '清洁构建'
        required: false
        default: false
        type: boolean

  push:
    branches: [main, master]
    tags: ['v*']

  pull_request:
    branches: [main, master]

env:
  USE_CCACHE: 1
  CCACHE_EXEC: /usr/bin/ccache
  CCACHE_MAXSIZE: 5G

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        device: [mondrian, vermeer, sheng]  # 修正：使用正确的设备代号
    # 如果指定了特定设备，只构建该设备
    if: |
      github.event_name == 'workflow_dispatch' && 
      github.event.inputs.device == matrix.device ||
      github.event_name != 'workflow_dispatch'
    
    name: 构建 ${{ matrix.device }} 内核
    timeout-minutes: 120
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: 设置构建环境
      run: bash scripts/setup-environment.sh

    - name: 下载工具链
      run: bash scripts/download-toolchains.sh

    - name: 下载高通依赖
      run: bash scripts/download-qcom-deps.sh

    - name: 设置 ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: kernel-${{ matrix.device }}-${{ github.sha }}
        restore-keys: |
          kernel-${{ matrix.device }}-

    - name: 构建内核
      run: |
        bash scripts/build-kernel.sh \
          --device ${{ matrix.device }} \
          --toolchain ${{ github.event.inputs.toolchain || 'clang' }} \
          --jobs $(($(nproc) + 1)) \
          --apply-patches true

    - name: 打包内核
      run: |
        DEVICE="${{ matrix.device }}"
        BUILD_DATE=$(date +%Y%m%d)
        COMMIT_HASH=${GITHUB_SHA:0:8}
        
        # 创建设备特定的打包目录
        mkdir -p build_artifacts/$DEVICE
        
        # 复制内核镜像
        cp out/$DEVICE/arch/arm64/boot/Image.gz-dtb build_artifacts/$DEVICE/
        
        # 复制设备树文件
        if [ -d "out/$DEVICE/arch/arm64/boot/dts" ]; then
          mkdir -p build_artifacts/$DEVICE/dtb
          find out/$DEVICE/arch/arm64/boot/dts -name "*.dtb" -exec cp {} build_artifacts/$DEVICE/dtb/ \; 2>/dev/null || true
        fi
        
        # 复制模块
        if [ -d "out/$DEVICE/lib/modules" ]; then
          mkdir -p build_artifacts/$DEVICE/modules
          find out/$DEVICE/lib/modules -name "*.ko" -exec cp {} build_artifacts/$DEVICE/modules/ \;
        fi
        
        # 创建设备信息文件
        cat > build_artifacts/$DEVICE/device-info.txt << EOF
设备代号: $DEVICE
设备名称: $(case $DEVICE in 
  "mondrian") echo "红米 K60" ;; 
  "vermeer") echo "红米 K70" ;; 
  "sheng") echo "小米 Pad 6S Pro" ;; 
  esac)
芯片平台: $(case $DEVICE in 
  "mondrian") echo "骁龙8+ Gen 1 (SM8475)" ;; 
  "vermeer"|"sheng") echo "骁龙8 Gen 2 (SM8550)" ;; 
  esac)
构建时间: $(date)
Git提交: ${COMMIT_HASH}
构建系统: GitHub Actions
EOF

        # 打包
        cd build_artifacts/$DEVICE
        zip -r9 "$DEVICE-kernel-$BUILD_DATE-$COMMIT_HASH.zip" .

    - name: 上传构建产物
      uses: actions/upload-artifact@v4
      with:
        name: kernel-${{ matrix.device }}
        path: build_artifacts/${{ matrix.device }}/*.zip
        retention-days: 30
